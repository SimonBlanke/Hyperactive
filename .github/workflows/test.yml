name: tests

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  code-quality:
    name: code-quality
    runs-on: ubuntu-latest
    steps:
      - name: repository checkout step
        uses: actions/checkout@v5

      - name: python environment step
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: install pre-commit
        run: python3 -m pip install pre-commit

      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | tr '\n' ' ')
          echo "CHANGED_FILES=${CHANGED_FILES}" >> $GITHUB_ENV

      - name: Print changed files
        run: |
          echo "Changed files:" && echo "$CHANGED_FILES" | tr ' ' '\n'

      - name: Run pre-commit on changed files
        run: |
          if [ -n "$CHANGED_FILES" ]; then
            pre-commit run --color always --files $CHANGED_FILES --show-diff-on-failure
          else
            echo "No changed files to check."
          fi

  test-no-extras:
    name: test-no-extras
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        os: ["macos-latest", "windows-latest", "ubuntu-latest"]
        exclude:
          - os: "windows-latest"
            python-version: "3.13"

      fail-fast: false

    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

          make install-no-extras-for-test

      - name: Show dependencies
        run: python -m pip list

      - name: Test core package
        run: |
          python -m pytest src/hyperactive -p no:warnings

  test-all-extras:
    name: test-all-extras
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        os: ["macos-latest", "windows-latest", "ubuntu-latest"]
        exclude:
          - os: "windows-latest"
            python-version: "3.13"

      fail-fast: false

    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

          make install-all-extras-for-test

      - name: Show dependencies
        run: python -m pip list

      - name: Test core package
        run: |
          python -m pytest src/hyperactive -p no:warnings

  test-sklearn-versions:
    name: test-sklearn-${{ matrix.sklearn-version }}-python-${{ matrix.python-version }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        sklearn-version: ["1.5", "1.6", "1.7"]
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies for scikit-learn ${{ matrix.sklearn-version }}
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[all_extras,test] scikit-learn==${{ matrix.sklearn-version }}

      - name: Show dependencies
        run: python -m pip list

      - name: Run sklearn integration tests for ${{ matrix.sklearn-version }}
        run: |
          python -m pytest -x -p no:warnings src/hyperactive/integrations/sklearn/

  test-examples:
    name: test-examples
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Check for example changes
        id: check-examples
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            # For pushes, compare with previous commit
            CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD | grep "^examples/" || true)
          else
            # For pull requests, compare with base branch
            CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | grep "^examples/" || true)
          fi

          if [ -n "$CHANGED_FILES" ]; then
            echo "examples_changed=true" >> $GITHUB_OUTPUT
            echo "Examples changed:"
            echo "$CHANGED_FILES"
          else
            echo "examples_changed=false" >> $GITHUB_OUTPUT
            echo "No example files changed"
          fi

      - name: Install dependencies
        if: steps.check-examples.outputs.examples_changed == 'true'
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
          make install-all-extras-for-test

      - name: Show dependencies
        if: steps.check-examples.outputs.examples_changed == 'true'
        run: python -m pip list

      - name: Test examples
        if: steps.check-examples.outputs.examples_changed == 'true'
        run: |
          python -m pytest examples/ -v -p no:warnings
